/*
 * Copyright (c) 2024 Huawei Device Co., Ltd. All rights reserved
 * Use of this source code is governed by a MIT license that can be
 * found in the LICENSE file.
 */
 
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include "EventEmitters.h"

namespace facebook {
namespace react {

void FastImageViewEventEmitter::onFastImageError(OnFastImageError event) const {
    dispatchEvent("fastImageError", [](jsi::Runtime &runtime) {
        auto payload = jsi::Object(runtime);

        return payload;
    });
}
void FastImageViewEventEmitter::onFastImageLoad(OnFastImageLoad event) const {
    dispatchEvent("fastImageLoad", [event = std::move(event)](jsi::Runtime &runtime) {
        auto payload = jsi::Object(runtime);
        payload.setProperty(runtime, "width", event.width);
        payload.setProperty(runtime, "height", event.height);
        return payload;
    });
}
void FastImageViewEventEmitter::onFastImageLoadEnd(OnFastImageLoadEnd event) const {
    dispatchEvent("fastImageLoadEnd", [](jsi::Runtime &runtime) {
        auto payload = jsi::Object(runtime);

        return payload;
    });
}
void FastImageViewEventEmitter::onFastImageLoadStart(OnFastImageLoadStart event) const {
    dispatchEvent("fastImageLoadStart", [](jsi::Runtime &runtime) {
        auto payload = jsi::Object(runtime);

        return payload;
    });
}
void FastImageViewEventEmitter::onFastImageProgress(OnFastImageProgress event) const {
    dispatchEvent("fastImageProgress", [event = std::move(event)](jsi::Runtime &runtime) {
        auto payload = jsi::Object(runtime);
        payload.setProperty(runtime, "loaded", event.loaded);
        payload.setProperty(runtime, "total", event.total);
        return payload;
    });
}

} // namespace react
} // namespace facebook
